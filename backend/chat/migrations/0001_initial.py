# Generated by Django 2.2.4 on 2025-08-22 18:09

import chat.log_filters
import chat.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('sex', models.SmallIntegerField(default=0)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=chat.models.get_random_path_thumbnail)),
                ('last_time_online', models.BigIntegerField(default=chat.models.get_milliseconds)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('disabled', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IpAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=32, unique=True)),
                ('isp', models.CharField(blank=True, max_length=255, null=True)),
                ('country_code', models.CharField(blank=True, max_length=16, null=True)),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('region', models.CharField(blank=True, max_length=64, null=True)),
                ('city', models.CharField(blank=True, max_length=64, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('zip', models.CharField(blank=True, max_length=32, null=True)),
                ('timezone', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'chat_ip_address',
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.BigIntegerField(default=chat.models.get_milliseconds)),
                ('content', models.TextField(blank=True, null=True)),
                ('symbol', models.CharField(blank=True, max_length=1, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('message_status', models.CharField(default='u', max_length=1)),
                ('thread_messages_count', models.IntegerField(default=0)),
                ('updated_at', models.BigIntegerField(default=chat.models.get_milliseconds)),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.Message')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_main_in_channel', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=16, null=True)),
                ('p2p', models.BooleanField(default=False)),
                ('disabled', models.BooleanField(default=False)),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='chat.Channel')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inactive', models.BooleanField(default=False)),
                ('registration_id', models.CharField(max_length=255, unique=True)),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('updated', models.DateTimeField(default=datetime.datetime.now)),
                ('agent', models.CharField(blank=True, max_length=64, null=True)),
                ('is_mobile', models.BooleanField(blank=True, default=False)),
                ('ip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.IpAddress')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=1)),
                ('token', models.CharField(default=chat.log_filters.id_generator, max_length=17)),
                ('time', models.DateTimeField(default=datetime.datetime.now)),
                ('verified', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=190, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=1)),
                ('file', models.FileField(null=True, upload_to=chat.models.get_random_path)),
                ('type', models.CharField(max_length=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoomUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.IntegerField(default=2)),
                ('notifications', models.BooleanField(default=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.Room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_room_users',
                'unique_together': {('user', 'room')},
            },
        ),
        migrations.AddField(
            model_name='room',
            name='users',
            field=models.ManyToManyField(related_name='rooms', through='chat.RoomUsers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MessageMention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=1)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.Message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MessageHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.BigIntegerField(default=chat.models.get_milliseconds)),
                ('content', models.TextField(blank=True, null=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.Message')),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.Room'),
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='IssueDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('browser', models.CharField(blank=True, max_length=32, null=True)),
                ('version', models.CharField(blank=True, max_length=32, null=True)),
                ('time', models.DateField(blank=True, default=datetime.datetime.now)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.Issue')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_issue_detail',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=1)),
                ('img', models.FileField(null=True, upload_to=chat.models.get_random_path)),
                ('absolute_url', models.CharField(blank=True, max_length=256, null=True)),
                ('webp_absolute_url', models.CharField(blank=True, max_length=256, null=True)),
                ('preview', models.FileField(null=True, upload_to=chat.models.get_random_path)),
                ('type', models.CharField(default='i', max_length=1)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.Message')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('surname', models.CharField(blank=True, max_length=30, null=True)),
                ('facebook_id', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('google_id', models.CharField(blank=True, max_length=190, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=190, null=True, unique=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('contacts', models.CharField(blank=True, max_length=100, null=True)),
                ('photo', models.FileField(blank=True, null=True, upload_to=chat.models.get_random_path)),
                ('suggestions', models.BooleanField(default=True)),
                ('show_when_i_typing', models.BooleanField(default=True)),
                ('embedded_youtube', models.BooleanField(default=True)),
                ('highlight_code', models.BooleanField(default=False)),
                ('logs', models.CharField(default='debug', max_length=32)),
                ('theme', models.CharField(default='color-reg', max_length=16)),
                ('online_change_sound', models.BooleanField(default=True)),
                ('incoming_file_call_sound', models.BooleanField(default=True)),
                ('message_sound', models.BooleanField(default=True)),
                ('send_logs', models.BooleanField(default=True)),
                ('email_verification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.Verification')),
            ],
            options={
                'abstract': False,
            },
            bases=('chat.user',),
        ),
        migrations.CreateModel(
            name='UserJoinedInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField(default=datetime.datetime.now)),
                ('ip', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.IpAddress')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_user_joined_info',
                'unique_together': {('user', 'ip')},
            },
        ),
        migrations.CreateModel(
            name='SubscriptionMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received', models.BooleanField(default=False)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.Message')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.Subscription')),
            ],
            options={
                'db_table': 'chat_subscription_message',
                'unique_together': {('message', 'subscription')},
            },
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('channel__isnull', True), ('name__isnull', True)), models.Q(('channel__isnull', False), ('name__isnull', False)), _connector='OR'), name='channel_should_exist_for_public_room_and_not_exist_for_private'),
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.CheckConstraint(check=models.Q(('creator__isnull', True), ('name__isnull', False), _connector='OR'), name='admin_should_not_be_define_for_private_rooms'),
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.CheckConstraint(check=models.Q(('p2p', False), ('name__isnull', True), _connector='OR'), name='p2p_only_if_private'),
        ),
        migrations.AlterUniqueTogether(
            name='messagemention',
            unique_together={('user', 'symbol', 'message')},
        ),
        migrations.AlterUniqueTogether(
            name='image',
            unique_together={('symbol', 'message')},
        ),
    ]
